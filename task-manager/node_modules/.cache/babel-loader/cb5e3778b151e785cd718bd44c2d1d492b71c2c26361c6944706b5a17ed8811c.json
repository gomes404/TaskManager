{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\Programa\\xE7\\xE3o\\\\TaskManager\\\\task-manager\\\\src\\\\components\\\\TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { createTask } from '../utils/taskUtils';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskForm({\n  onTaskAdded,\n  onCancel\n}) {\n  _s();\n  const [description, setDescription] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!description.trim()) {\n      toast.error('Task description cannot be empty');\n      return;\n    }\n    try {\n      await createTask({\n        description\n      });\n      setDescription('');\n      onTaskAdded();\n      toast.success('Task added successfully');\n    } catch (error) {\n      toast.error('Failed to add task');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-form-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"task-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        placeholder: \"Enter task description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: onCancel,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskForm, \"T5v5dRzedMK18tfGxj2rihBX8Sg=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","createTask","toast","jsxDEV","_jsxDEV","TaskForm","onTaskAdded","onCancel","_s","description","setDescription","handleSubmit","e","preventDefault","trim","error","success","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ricar/Desktop/Programação/TaskManager/task-manager/src/components/TaskForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { createTask } from '../utils/taskUtils';\r\nimport { toast } from 'react-toastify';\r\n\r\nfunction TaskForm({ onTaskAdded, onCancel }) {\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    if (!description.trim()) {\r\n      toast.error('Task description cannot be empty');\r\n      return;\r\n    }\r\n    try {\r\n      await createTask({ description });\r\n      setDescription('');\r\n      onTaskAdded();\r\n      toast.success('Task added successfully');\r\n    } catch (error) {\r\n      toast.error('Failed to add task');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-form-overlay\">\r\n      <form onSubmit={handleSubmit} className=\"task-form\">\r\n        <input\r\n          type=\"text\"\r\n          value={description}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n          placeholder=\"Enter task description\"\r\n        />\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">Add</button>\r\n          <button type=\"button\" onClick={onCancel}>Cancel</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,SAASC,KAAK,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,QAAQA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMW,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI,CAACJ,WAAW,CAACK,IAAI,CAAC,CAAC,EAAE;MACvBZ,KAAK,CAACa,KAAK,CAAC,kCAAkC,CAAC;MAC/C;IACF;IACA,IAAI;MACF,MAAMd,UAAU,CAAC;QAAEQ;MAAY,CAAC,CAAC;MACjCC,cAAc,CAAC,EAAE,CAAC;MAClBJ,WAAW,CAAC,CAAC;MACbJ,KAAK,CAACc,OAAO,CAAC,yBAAyB,CAAC;IAC1C,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdb,KAAK,CAACa,KAAK,CAAC,oBAAoB,CAAC;IACnC;EACF,CAAC;EAED,oBACEX,OAAA;IAAKa,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eAChCd,OAAA;MAAMe,QAAQ,EAAER,YAAa;MAACM,SAAS,EAAC,WAAW;MAAAC,QAAA,gBACjDd,OAAA;QACEgB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEZ,WAAY;QACnBa,QAAQ,EAAGV,CAAC,IAAKF,cAAc,CAACE,CAAC,CAACW,MAAM,CAACF,KAAK,CAAE;QAChDG,WAAW,EAAC;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrC,CAAC,eACFxB,OAAA;QAAKa,SAAS,EAAC,cAAc;QAAAC,QAAA,gBAC3Bd,OAAA;UAAQgB,IAAI,EAAC,QAAQ;UAAAF,QAAA,EAAC;QAAG;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAClCxB,OAAA;UAAQgB,IAAI,EAAC,QAAQ;UAACS,OAAO,EAAEtB,QAAS;UAAAW,QAAA,EAAC;QAAM;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACpB,EAAA,CAnCQH,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAqCjB,eAAeA,QAAQ;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}