{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\Programa\\xE7\\xE3o\\\\TaskManager\\\\task-manager\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { fetchTasks } from '../utils/taskUtils';\nimport { toast } from 'react-toastify';\nimport TaskItem from './TaskItem';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [showNewTaskForm, setShowNewTaskForm] = useState(false);\n  useEffect(() => {\n    loadTasks();\n  }, []);\n  const loadTasks = async () => {\n    try {\n      setLoading(true);\n      const fetchedTasks = await fetchTasks();\n      setTasks(fetchedTasks);\n    } catch (err) {\n      toast.error('Failed to load tasks');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleTaskUpdated = () => {\n    loadTasks();\n  };\n  const handleNewTaskAdded = () => {\n    loadTasks();\n    setShowNewTaskForm(false);\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading tasks...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-task-button\",\n      onClick: () => setShowNewTaskForm(true),\n      children: \"Create New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), showNewTaskForm && /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskAdded: handleNewTaskAdded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), tasks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks found. Add a new task to get started!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onTaskUpdated: handleTaskUpdated\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"Yvu8zPpJ3SPn7mJu8P+hn4hJbNo=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","fetchTasks","toast","TaskItem","TaskForm","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","loading","setLoading","showNewTaskForm","setShowNewTaskForm","loadTasks","fetchedTasks","err","error","handleTaskUpdated","handleNewTaskAdded","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","onTaskAdded","length","map","task","onTaskUpdated","_id","_c","$RefreshReg$"],"sources":["C:/Users/ricar/Desktop/Programação/TaskManager/task-manager/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { fetchTasks } from '../utils/taskUtils';\r\nimport { toast } from 'react-toastify';\r\nimport TaskItem from './TaskItem';\r\nimport TaskForm from './TaskForm';\r\n\r\nfunction TaskList() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showNewTaskForm, setShowNewTaskForm] = useState(false);\r\n\r\n  useEffect(() => {\r\n    loadTasks();\r\n  }, []);\r\n\r\n  const loadTasks = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const fetchedTasks = await fetchTasks();\r\n      setTasks(fetchedTasks);\r\n    } catch (err) {\r\n      toast.error('Failed to load tasks');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleTaskUpdated = () => {\r\n    loadTasks();\r\n  };\r\n\r\n  const handleNewTaskAdded = () => {\r\n    loadTasks();\r\n    setShowNewTaskForm(false);\r\n  };\r\n\r\n  if (loading) {\r\n    return <div>Loading tasks...</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-list-container\">\r\n      <h1>Task List</h1>\r\n      <button \r\n        className=\"new-task-button\" \r\n        onClick={() => setShowNewTaskForm(true)}\r\n      >\r\n        Create New Task\r\n      </button>\r\n      {showNewTaskForm && (\r\n        <TaskForm onTaskAdded={handleNewTaskAdded} />\r\n      )}\r\n      {tasks.length === 0 ? (\r\n        <p>No tasks found. Add a new task to get started!</p>\r\n      ) : (\r\n        <div className=\"task-list\">\r\n          {tasks.map(task => (\r\n            <TaskItem \r\n              key={task._id} \r\n              task={task} \r\n              onTaskUpdated={handleTaskUpdated} \r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}