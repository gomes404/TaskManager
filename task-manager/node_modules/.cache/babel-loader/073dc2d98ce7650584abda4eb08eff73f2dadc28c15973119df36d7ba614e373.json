{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ricar\\\\Desktop\\\\Programa\\xE7\\xE3o\\\\TaskManager\\\\task-manager\\\\src\\\\components\\\\TaskColumn.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport TaskItem from './TaskItem';\nimport TaskForm from './TaskForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskColumn({\n  title,\n  tasks,\n  onTaskUpdated,\n  onNewTask\n}) {\n  _s();\n  const [showNewTaskForm, setShowNewTaskForm] = useState(false);\n  const handleNewTaskAdded = () => {\n    setShowNewTaskForm(false);\n    if (onNewTask) onNewTask();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), title === \"To Do\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"new-task-button\",\n      onClick: () => setShowNewTaskForm(true),\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this), showNewTaskForm && /*#__PURE__*/_jsxDEV(TaskForm, {\n      onTaskAdded: handleNewTaskAdded,\n      onCancel: () => setShowNewTaskForm(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n        task: task,\n        onTaskUpdated: onTaskUpdated\n      }, task._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskColumn, \"kAqR4470nN0Mw6R4o8xrOzJs9d0=\");\n_c = TaskColumn;\nexport default TaskColumn;\nvar _c;\n$RefreshReg$(_c, \"TaskColumn\");","map":{"version":3,"names":["React","useState","TaskItem","TaskForm","jsxDEV","_jsxDEV","TaskColumn","title","tasks","onTaskUpdated","onNewTask","_s","showNewTaskForm","setShowNewTaskForm","handleNewTaskAdded","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onTaskAdded","onCancel","map","task","_id","_c","$RefreshReg$"],"sources":["C:/Users/ricar/Desktop/Programação/TaskManager/task-manager/src/components/TaskColumn.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport TaskItem from './TaskItem';\r\nimport TaskForm from './TaskForm';\r\n\r\nfunction TaskColumn({ title, tasks, onTaskUpdated, onNewTask }) {\r\n  const [showNewTaskForm, setShowNewTaskForm] = useState(false);\r\n\r\n  const handleNewTaskAdded = () => {\r\n    setShowNewTaskForm(false);\r\n    if (onNewTask) onNewTask();\r\n  };\r\n\r\n  return (\r\n    <div className=\"task-column\">\r\n      <h2>{title}</h2>\r\n      {title === \"To Do\" && (\r\n        <button \r\n          className=\"new-task-button\" \r\n          onClick={() => setShowNewTaskForm(true)}\r\n        >\r\n          Add Task\r\n        </button>\r\n      )}\r\n      {showNewTaskForm && (\r\n        <TaskForm \r\n          onTaskAdded={handleNewTaskAdded} \r\n          onCancel={() => setShowNewTaskForm(false)}\r\n        />\r\n      )}\r\n      <div className=\"task-list\">\r\n        {tasks.map(task => (\r\n          <TaskItem \r\n            key={task._id} \r\n            task={task} \r\n            onTaskUpdated={onTaskUpdated} \r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TaskColumn;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,UAAUA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC,aAAa;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EAC9D,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMa,kBAAkB,GAAGA,CAAA,KAAM;IAC/BD,kBAAkB,CAAC,KAAK,CAAC;IACzB,IAAIH,SAAS,EAAEA,SAAS,CAAC,CAAC;EAC5B,CAAC;EAED,oBACEL,OAAA;IAAKU,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BX,OAAA;MAAAW,QAAA,EAAKT;IAAK;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EACfb,KAAK,KAAK,OAAO,iBAChBF,OAAA;MACEU,SAAS,EAAC,iBAAiB;MAC3BM,OAAO,EAAEA,CAAA,KAAMR,kBAAkB,CAAC,IAAI,CAAE;MAAAG,QAAA,EACzC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT,EACAR,eAAe,iBACdP,OAAA,CAACF,QAAQ;MACPmB,WAAW,EAAER,kBAAmB;MAChCS,QAAQ,EAAEA,CAAA,KAAMV,kBAAkB,CAAC,KAAK;IAAE;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CACF,eACDf,OAAA;MAAKU,SAAS,EAAC,WAAW;MAAAC,QAAA,EACvBR,KAAK,CAACgB,GAAG,CAACC,IAAI,iBACbpB,OAAA,CAACH,QAAQ;QAEPuB,IAAI,EAAEA,IAAK;QACXhB,aAAa,EAAEA;MAAc,GAFxBgB,IAAI,CAACC,GAAG;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGd,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACT,EAAA,CApCQL,UAAU;AAAAqB,EAAA,GAAVrB,UAAU;AAsCnB,eAAeA,UAAU;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}